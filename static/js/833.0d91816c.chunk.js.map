{"version":3,"file":"static/js/833.0d91816c.chunk.js","mappings":"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","sources":["components/ProjectCard.jsx","components/Projects.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SoundWrapper } from \"../audio/AudioEngine\";\n\nconst ProjectCard = ({\n  title,\n  description = \"\",\n  longDescription = \"\",\n  image,\n  url,\n}) => {\n  const openProject = () => {\n    if (url) window.open(url, \"_blank\", \"noopener noreferrer\");\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault();\n      openProject();\n    }\n  };\n\n  const handleImageError = (event) => {\n    event.target.style.display = \"none\";\n  };\n\n  return (\n    <article className=\"flex flex-col\">\n      <header className=\"flex pb-3\">\n        <h3 className=\"pr-2 text-primary-5\">{title}</h3>\n        {description && <p className=\"text-primary-2\"></p>}\n      </header>\n\n      <div className=\"border shadow-sm border-primary-3 rounded-xl shadow-black\">\n        <img\n          className=\"h-auto rounded-t-xl\"\n          src={image}\n          alt={`${title} project preview`}\n          loading=\"lazy\"\n          onError={handleImageError}\n        />\n\n        <div className=\"bg-[#011221] px-8 py-4 rounded-b-xl\">\n          {longDescription && (\n            <p className=\"pb-5 tracking-widest text-primary-2\">\n              {longDescription}\n            </p>\n          )}\n\n          <SoundWrapper>\n            <button\n              type=\"button\"\n              className=\"px-3 py-2 text-sm rounded-lg text-primary-7 bg-[#1C2B3A] inline-block hover:bg-[#263b52] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              onClick={openProject}\n              onKeyDown={handleKeyDown}\n              disabled={!url}\n              aria-label={`View ${title} project`}\n            >\n              view-project\n            </button>\n          </SoundWrapper>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nProjectCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  longDescription: PropTypes.string,\n  image: PropTypes.string.isRequired,\n  url: PropTypes.string,\n};\n\nexport default ProjectCard;\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProjectCard from \"./ProjectCard\";\nimport { projects, techFilterOptions } from \"../data/index\";\nimport { SoundWrapper } from \"../audio/AudioEngine\";\n\nconst CheckIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"m-auto\"\n    aria-hidden=\"true\"\n  >\n    <path\n      d=\"M10 3L4.5 8.5L2 6\"\n      stroke=\"white\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst FilterItem = ({ tech, isSelected, onSelect }) => {\n  const handleClick = useCallback(() => {\n    onSelect(tech.name);\n  }, [onSelect, tech.name]);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n        onSelect(tech.name);\n      }\n    },\n    [onSelect, tech.name],\n  );\n\n  return (\n    <li className=\"list-none\">\n      <SoundWrapper>\n        <button\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n          className={`flex items-center py-2 pl-4 duration-300 cursor-pointer select-none text-primary-2 hover:bg-primary-3 hover:text-primary-7 w-full text-left ${isSelected ? \"bg-primary-3\" : \"\"}`}\n          type=\"button\"\n          aria-pressed={isSelected}\n        >\n          <div\n            className={`w-4 h-4 border border-primary-2 rounded-sm flex mr-2 ${isSelected ? \"bg-primary-2 border-none\" : \"bg-transparent\"}`}\n            aria-hidden=\"true\"\n          >\n            {isSelected && <CheckIcon />}\n          </div>\n          <i className={`mr-2 ${tech.className}`} aria-hidden=\"true\" />\n          {tech.name}\n        </button>\n      </SoundWrapper>\n    </li>\n  );\n};\n\nFilterItem.propTypes = {\n  tech: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    className: PropTypes.string.isRequired,\n  }).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nconst Projects = () => {\n  const [selectedTech, setSelectedTech] = useState(null);\n\n  const handleTechClick = useCallback((tech) => {\n    setSelectedTech((prevTech) => (prevTech === tech ? null : tech));\n  }, []);\n\n  const filteredProjects = useMemo(() => {\n    if (!selectedTech) return projects;\n\n    if (selectedTech === \"HTML & CSS\") {\n      return projects.filter(\n        (project) =>\n          project.tech.includes(\"HTML\") && project.tech.includes(\"CSS\"),\n      );\n    }\n\n    return projects.filter((project) => project.tech.includes(selectedTech));\n  }, [selectedTech]);\n\n  const selectedTechsDisplay = useMemo(() => {\n    if (!selectedTech) return \"projects\";\n\n    const techMap = {\n      React: \"React\",\n      \"HTML & CSS\": \"HTML; CSS\",\n      Tailwind: \"Tailwind\",\n      JavaScript: \"JavaScript\",\n    };\n\n    return techMap[selectedTech] || selectedTech;\n  }, [selectedTech]);\n\n  return (\n    <section className=\"relative flex flex-col w-full overflow-y-auto xl:flex-row bg-primary-1\">\n      <aside className=\"w-full xl:w-[298px] h-full border-b xl:border-b-0 border-primary-3\">\n        <div className=\"flex items-center border-b border-primary-3\">\n          <i\n            className=\"flex items-center justify-center ml-3 text-sm text-primary-7 icon-arrow-down\"\n            aria-hidden=\"true\"\n          />\n          <h2 className=\"w-full py-2 pl-2 text-primary-7\">projects</h2>\n        </div>\n\n        <nav aria-label=\"Project filters\">\n          <ul>\n            {techFilterOptions.map((tech) => (\n              <FilterItem\n                key={tech.id || `filter-${tech.name}-${tech.className}`}\n                tech={tech}\n                isSelected={selectedTech === tech.name}\n                onSelect={handleTechClick}\n              />\n            ))}\n          </ul>\n        </nav>\n      </aside>\n\n      <main className=\"w-full border-b border-l xl:border-l xl:border-b-0 border-primary-3\">\n        <header className=\"flex\">\n          <h3 className=\"p-2 pr-16 border-r text-primary-2 border-primary-3\">\n            {selectedTechsDisplay}\n          </h3>\n        </header>\n\n        <div className=\"flex flex-wrap items-center justify-center gap-10 px-8 py-6 border-t border-primary-3\">\n          {filteredProjects.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center text-primary-2 p-8\">\n              <i\n                className=\"icon-folder text-4xl mb-4 opacity-50\"\n                aria-hidden=\"true\"\n              />\n              <p className=\"text-lg\">No projects match the selected filter.</p>\n              <p className=\"text-sm mt-2 opacity-75\">\n                Try selecting a different technology or clear the filter.\n              </p>\n            </div>\n          ) : (\n            filteredProjects.map((project) => (\n              <ProjectCard\n                key={project.id}\n                title={project.title}\n                description={project.description}\n                longDescription={project.longDescription}\n                image={project.image}\n                url={project.url}\n              />\n            ))\n          )}\n        </div>\n      </main>\n    </section>\n  );\n};\n\nexport default Projects;\n"],"names":["_ref","title","description","longDescription","image","url","openProject","window","open","_jsxs","className","children","_jsx","src","alt","concat","loading","onError","event","target","style","display","SoundWrapper","type","onClick","onKeyDown","key","preventDefault","disabled","CheckIcon","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","FilterItem","tech","isSelected","onSelect","handleClick","useCallback","name","handleKeyDown","e","Projects","selectedTech","setSelectedTech","useState","handleTechClick","prevTech","filteredProjects","useMemo","projects","filter","project","includes","selectedTechsDisplay","React","Tailwind","JavaScript","techFilterOptions","map","id","length","ProjectCard"],"sourceRoot":""}